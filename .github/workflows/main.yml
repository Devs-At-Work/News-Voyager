name: News-Voyager CI Pipeline
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: backend, port: 3001, path: ./backend },
            { name: frontend, port: 5173, path: ./frontend },
            {
              name: microservices-business,
              port: 3010,
              path: ./microservices/business,
            },
            {
              name: microservices-entertainment,
              port: 3011,
              path: ./microservices/enterainment,
            },
            {
              name: microservices-general,
              port: 3016,
              path: ./microservices/general,
            },
            {
              name: microservices-health,
              port: 3012,
              path: ./microservices/health,
            },
            {
              name: microservices-science,
              port: 3013,
              path: ./microservices/science,
            },
            {
              name: microservices-sports,
              port: 3014,
              path: ./microservices/sports,
            },
            {
              name: microservices-technology,
              port: 3015,
              path: ./microservices/technology,
            },
          ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata and set tags
        id: meta
        run: |
          echo "image_name=deepanshurawat6/${{ matrix.service.name }}" >> $GITHUB_OUTPUT
          echo "image_tag=1.0.0-${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "full_image_name=deepanshurawat6/${{ matrix.service.name }}:1.0.0-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.path }}
          push: true
          tags: ${{ steps.meta.outputs.full_image_name }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.image_name }}:latest
          cache-to: type=inline

  update-k8s-configs:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout K8s config repository
        uses: actions/checkout@v4
        with:
          repository: Devs-At-Work/News-Voyager-configs
          token: ${{ secrets.REPO_TOKEN }}
          path: ./News-Voyager-configs

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update deployment manifests
        run: |
          cd ./News-Voyager-configs

          # Update backend deployment
          yq e -i '.spec.template.spec.containers[0].image = "deepanshurawat6/backend:1.0.0-${{ github.run_number }}"' ./dev/backend/backend-deployment.yaml

          # Update frontend deployment
          yq e -i '.spec.template.spec.containers[0].image = "deepanshurawat6/frontend:1.0.0-${{ github.run_number }}"' ./dev/frontend/frontend-deployment.yaml

          # Update all microservices deployments
          for ms in business entertainment general health science sports technology; do
            yq e -i '.spec.template.spec.containers[0].image = "deepanshurawat6/microservices-'$ms':1.0.0-${{ github.run_number }}"' ./dev/microservices/$ms/microservices-$ms-deployment.yaml
          done

      - name: Commit and push changes
        run: |
          cd ./News-Voyager-configs
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update images to version 1.0.0-${{ github.run_number }}"
          git push

  deploy:
    needs: update-k8s-configs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Notify deployment status
        run: |
          echo "Deployment triggered via GitOps. ArgoCD will sync the changes automatically."
          echo "New image versions deployed: 1.0.0-${{ github.run_number }}"
